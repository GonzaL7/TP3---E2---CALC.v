$date
	Fri Nov 29 19:58:34 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbenchALL $end
$var wire 4 ! columnas [3:0] $end
$var reg 1 " clk $end
$var reg 1 # enable $end
$var reg 4 $ filas [3:0] $end
$var reg 1 % reset $end
$scope module uut $end
$var wire 1 & c $end
$var wire 1 ' clear_enable $end
$var wire 1 " clk $end
$var wire 2 ( display_state [1:0] $end
$var wire 1 # enable $end
$var wire 4 ) filas [3:0] $end
$var wire 1 * key_press $end
$var wire 1 % reset $end
$var wire 1 + special_sign $end
$var wire 2 , save_enable [1:0] $end
$var wire 16 - save2 [15:0] $end
$var wire 16 . save1 [15:0] $end
$var wire 1 / rst_cnt $end
$var wire 16 0 res [15:0] $end
$var wire 2 1 operator [1:0] $end
$var wire 4 2 op_out [3:0] $end
$var wire 1 3 op_enable $end
$var wire 1 4 op $end
$var wire 1 5 num $end
$var wire 1 6 key_detect $end
$var wire 4 7 keyPressed [3:0] $end
$var wire 1 8 is_c $end
$var wire 6 9 indice_boton [5:0] $end
$var wire 1 : equ_enable $end
$var wire 1 ; equ $end
$var wire 16 < display_out [15:0] $end
$var wire 2 = disp_enable [1:0] $end
$var wire 4 > curr_event [3:0] $end
$var wire 4 ? columnas [3:0] $end
$var wire 1 @ cnt_out $end
$var wire 1 A alu_enable $end
$scope module ALU_inst $end
$var wire 1 & clear $end
$var wire 1 " clk $end
$var wire 4 B op_selected [3:0] $end
$var wire 14 C mul1k_out2 [13:0] $end
$var wire 14 D mul1k_out1 [13:0] $end
$var wire 14 E mul10_out2 [13:0] $end
$var wire 14 F mul10_out1 [13:0] $end
$var wire 14 G mul100_out2 [13:0] $end
$var wire 14 H mul100_out1 [13:0] $end
$var wire 16 I bcd2 [15:0] $end
$var wire 16 J bcd1 [15:0] $end
$var reg 16 K bcd_out [15:0] $end
$var reg 14 L bin1 [13:0] $end
$var reg 14 M bin2 [13:0] $end
$var reg 14 N bin_result [13:0] $end
$var reg 1 + special_signal $end
$var integer 32 O i [31:0] $end
$scope module mul100_inst1 $end
$var wire 1 " clk $end
$var wire 4 P in100 [3:0] $end
$var reg 14 Q extended_in100 [13:0] $end
$var reg 14 R in32 [13:0] $end
$var reg 14 S in4 [13:0] $end
$var reg 14 T in64 [13:0] $end
$var reg 14 U out100 [13:0] $end
$upscope $end
$scope module mul100_inst2 $end
$var wire 1 " clk $end
$var wire 4 V in100 [3:0] $end
$var reg 14 W extended_in100 [13:0] $end
$var reg 14 X in32 [13:0] $end
$var reg 14 Y in4 [13:0] $end
$var reg 14 Z in64 [13:0] $end
$var reg 14 [ out100 [13:0] $end
$upscope $end
$scope module mul10_inst1 $end
$var wire 1 " clk $end
$var wire 4 \ in10 [3:0] $end
$var reg 14 ] extended_in10 [13:0] $end
$var reg 14 ^ in2 [13:0] $end
$var reg 14 _ in3 [13:0] $end
$var reg 14 ` out10 [13:0] $end
$upscope $end
$scope module mul10_inst2 $end
$var wire 1 " clk $end
$var wire 4 a in10 [3:0] $end
$var reg 14 b extended_in10 [13:0] $end
$var reg 14 c in2 [13:0] $end
$var reg 14 d in3 [13:0] $end
$var reg 14 e out10 [13:0] $end
$upscope $end
$scope module mul1k_inst1 $end
$var wire 1 " clk $end
$var wire 4 f in1k [3:0] $end
$var reg 14 g extended_in1k [13:0] $end
$var reg 14 h in1024 [13:0] $end
$var reg 14 i in16 [13:0] $end
$var reg 14 j in8 [13:0] $end
$var reg 14 k out1k [13:0] $end
$upscope $end
$scope module mul1k_inst2 $end
$var wire 1 " clk $end
$var wire 4 l in1k [3:0] $end
$var reg 14 m extended_in1k [13:0] $end
$var reg 14 n in1024 [13:0] $end
$var reg 14 o in16 [13:0] $end
$var reg 14 p in8 [13:0] $end
$var reg 14 q out1k [13:0] $end
$upscope $end
$upscope $end
$scope module FSM_inst $end
$var wire 1 & C $end
$var wire 1 " clk $end
$var wire 1 % resetn $end
$var wire 1 5 num $end
$var wire 1 @ cnt_out $end
$var wire 1 4 OP $end
$var wire 1 ; EQ $end
$var parameter 4 r ALU $end
$var parameter 4 s Save_Op $end
$var parameter 4 t error_Messg $end
$var parameter 4 u esperando_1 $end
$var parameter 4 v esperando_2 $end
$var parameter 4 w esperando_EQ $end
$var parameter 4 x esperando_Op1 $end
$var parameter 4 y memoryClear $end
$var parameter 4 z res $end
$var parameter 4 { save_1 $end
$var parameter 4 | save_2 $end
$var parameter 4 } save_res $end
$var reg 1 A alu_enable $end
$var reg 4 ~ curr_event [3:0] $end
$var reg 2 !" disp_enable [1:0] $end
$var reg 1 : equ_enable $end
$var reg 4 "" next_event [3:0] $end
$var reg 1 3 op_enable $end
$var reg 1 / rst_cnt $end
$var reg 2 #" save_enable [1:0] $end
$upscope $end
$scope module cnt_inst $end
$var wire 1 " clk $end
$var wire 1 / rst_cnt $end
$var wire 1 5 num $end
$var reg 1 @ cnt_out $end
$var reg 3 $" contador [2:0] $end
$upscope $end
$scope module disp_inst $end
$var wire 2 %" display_state [1:0] $end
$var wire 16 &" save2 [15:0] $end
$var wire 16 '" save1 [15:0] $end
$var wire 4 (" Op [3:0] $end
$var reg 16 )" display_out [15:0] $end
$upscope $end
$scope module memory_inst $end
$var wire 1 ' clear_enable $end
$var wire 1 " clk $end
$var wire 1 : equ_enable $end
$var wire 1 3 op_enable $end
$var wire 16 *" res [15:0] $end
$var wire 1 % rst $end
$var wire 2 +" save_enable [1:0] $end
$var wire 2 ," operator [1:0] $end
$var wire 4 -" num [3:0] $end
$var reg 4 ." op_out [3:0] $end
$var reg 16 /" save1 [15:0] $end
$var reg 16 0" save2 [15:0] $end
$upscope $end
$scope module sincronize_inst $end
$var wire 1 " clk $end
$var wire 1 * key_press $end
$var wire 1 % rst $end
$var reg 1 6 key_detect $end
$var reg 1 1" key_pressA $end
$upscope $end
$scope module teclado_inst $end
$var wire 1 " clk $end
$var wire 1 # enable $end
$var wire 4 2" filas [3:0] $end
$var wire 1 % reset $end
$var wire 4 3" columnas [3:0] $end
$var wire 1 4" button_pressed $end
$var reg 3 5" columna_actual [2:0] $end
$var reg 3 6" fila_actual [2:0] $end
$var reg 6 7" indice_boton [5:0] $end
$scope module detectar_boton $end
$var wire 1 8" R1 $end
$var wire 1 9" R2 $end
$var wire 1 :" R3 $end
$var wire 1 ;" R4 $end
$var wire 1 # enable $end
$var reg 1 4" botonApretado $end
$upscope $end
$scope module ring $end
$var wire 1 " clk $end
$var wire 1 # enable $end
$var wire 1 % reset $end
$var reg 1 <" A $end
$var reg 1 =" B $end
$var reg 1 >" C $end
$var reg 1 ?" D $end
$upscope $end
$upscope $end
$scope module traduccion_inst $end
$var wire 6 @" input_teclado [5:0] $end
$var wire 1 6 key_detect $end
$var reg 4 A" traduccion [3:0] $end
$upscope $end
$scope module whichKey_inst $end
$var wire 4 B" key_pressed [3:0] $end
$var reg 1 8 is_c $end
$var reg 1 ; is_equ $end
$var reg 1 5 is_number $end
$var reg 1 4 is_op $end
$var reg 2 C" operator [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 }
b101 |
b1 {
b1001 z
b0 y
b11 x
b111 w
b110 v
b10 u
b1011 t
b100 s
b1000 r
$end
#0
$dumpvars
bx C"
b0 B"
b0 A"
b100100 @"
x?"
x>"
x="
x<"
0;"
0:"
09"
08"
b100100 7"
b100 6"
b100 5"
x4"
bx 3"
b0 2"
x1"
bx 0"
bx /"
bx ."
b0 -"
bx ,"
bx +"
b0 *"
b1010 )"
bx ("
bx '"
bx &"
bz %"
bx $"
bx #"
b1011 ""
bx !"
bx ~
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
b11111111111111111111111111111111 O
b0 N
bx M
bx L
b0 K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
x@
bx ?
bx >
bx =
b1010 <
x;
x:
b100100 9
x8
b0 7
x6
15
x4
x3
bx 2
bx 1
b0 0
x/
bx .
bx -
bx ,
0+
z*
b0 )
bz (
z'
z&
1%
b0 $
0#
0"
bx !
$end
#10000
0:
0/
b1 =
b1 !"
0A
03
b1 ,
b1 #"
b1 +"
b0 M
b0 L
b0 C
b0 q
b0 p
b0 o
b0 n
b0 m
b0 G
b0 [
b0 Y
b0 X
b0 Z
b0 W
b0 E
b0 e
b0 c
b0 d
b0 b
b0 D
b0 k
b0 j
b0 i
b0 h
b0 g
b0 H
b0 U
b0 S
b0 R
b0 T
b0 Q
b0 F
b0 `
b0 ^
b0 _
b0 ]
b1 ""
b0 l
b0 V
b0 a
b0 f
b0 P
b0 \
06
01"
1@
b0 >
b0 ~
b0 2
b0 B
b0 ("
b0 ."
b0 -
b0 I
b0 &"
b0 0"
b0 .
b0 J
b0 '"
b0 /"
1<"
0?"
0>"
b1 !
b1 ?
b1 3"
0="
1"
#20000
0"
#30000
1"
#40000
0"
#50000
b0 ,
b0 #"
b0 +"
b10 ""
z1"
b1 >
b1 ~
b100 9
b100 7"
b100 @"
1="
b10 !
b10 ?
b10 3"
0<"
04"
b1 5"
1"
1#
0%
#60000
0"
#70000
b11 ""
b10 >
b10 ~
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#80000
0"
#90000
b1 ,
b1 #"
b1 +"
b11 >
b11 ~
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#100000
0"
#110000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#120000
0"
#130000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#140000
0"
#150000
b1100 9
b1100 7"
b1100 @"
b0 6"
b10 5"
14"
1>"
b100 !
b100 ?
b100 3"
0="
18"
1"
b1 $
b1 )
b1 2"
#160000
0"
#170000
b10001 9
b10001 7"
b10001 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
b1 6"
08"
19"
1"
b10 $
b10 )
b10 2"
#180000
0"
#190000
b11011 9
b11011 7"
b11011 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
b11 6"
09"
1;"
1"
b1000 $
b1000 )
b1000 2"
#200000
0"
#210000
b10 9
b10 7"
b10 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
b10 6"
1:"
0;"
1"
b100 $
b100 )
b100 2"
#220000
0"
#230000
b1100 9
b1100 7"
b1100 @"
b10 5"
04"
1>"
b100 !
b100 ?
b100 3"
0="
b100 6"
0:"
1"
b0 $
b0 )
b0 2"
#240000
0"
#250000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#260000
0"
#270000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#280000
0"
#290000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#300000
0"
#310000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#320000
0"
#330000
b10100 9
b10100 7"
b10100 @"
b0 6"
b11 5"
14"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
18"
1"
b1 $
b1 )
b1 2"
#340000
0"
#350000
b11001 9
b11001 7"
b11001 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
b1 6"
08"
19"
1"
b10 $
b10 )
b10 2"
#360000
0"
#370000
b10 9
b10 7"
b10 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
b10 6"
09"
1:"
1"
b100 $
b100 )
b100 2"
#380000
0"
#390000
b1100 9
b1100 7"
b1100 @"
b10 5"
04"
1>"
b100 !
b100 ?
b100 3"
0="
b100 6"
0:"
1"
b0 $
b0 )
b0 2"
#400000
0"
#410000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#420000
0"
#430000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#440000
0"
#450000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#460000
0"
#470000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#480000
0"
#490000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#500000
0"
#510000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#520000
0"
#530000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#540000
0"
#550000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#560000
0"
#570000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#580000
0"
#590000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#600000
0"
#610000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#620000
0"
#630000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#640000
0"
#650000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#660000
0"
#670000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#680000
0"
#690000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#700000
0"
#710000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#720000
0"
#730000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#740000
0"
#750000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#760000
0"
#770000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#780000
0"
#790000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#800000
0"
#810000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
#820000
0"
#830000
b11100 9
b11100 7"
b11100 @"
b0 5"
1<"
b1 !
b1 ?
b1 3"
0?"
1"
#840000
0"
#850000
b100 9
b100 7"
b100 @"
b1 5"
1="
b10 !
b10 ?
b10 3"
0<"
1"
#860000
0"
#870000
b1100 9
b1100 7"
b1100 @"
b10 5"
1>"
b100 !
b100 ?
b100 3"
0="
1"
#880000
0"
#890000
b10100 9
b10100 7"
b10100 @"
b11 5"
1?"
b1000 !
b1000 ?
b1000 3"
0>"
1"
